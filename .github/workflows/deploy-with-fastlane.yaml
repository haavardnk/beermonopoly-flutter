name: Publish iOS and Android release

on:
  release:
    types: [published]

env:
  FLUTTER_CHANNEL: "stable"
  RUBY_VERSION: "3.2.2"

jobs:
  build_ios:
    name: Build iOS
    runs-on: macos-15
    timeout-minutes: 20
    env:
      FLUTTERFIRE_PLATFORM: ios
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: "ios"

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Create .env file
        run: |
          cat <<EOF > .env
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          FACEBOOK_URL=${{ secrets.FACEBOOK_URL }}
          FACEBOOK_PAGE_ID=${{ secrets.FACEBOOK_PAGE_ID }}
          FEEDBACK_EMAIL=${{ secrets.FEEDBACK_EMAIL }}
          EOF

      - name: Run Flutter tasks
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: "pubspec.yaml"
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Setup Firebase CLI
        uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}

      - name: Install FlutterFire CLI
        run: dart pub global activate flutterfire_cli

      - name: Install xcodeproj
        run: gem install xcodeproj

      - name: Run flutterfire configure
        run: flutterfire configure --platforms ${{ env.FLUTTERFIRE_PLATFORM }} --project ${{ secrets.FIREBASE_PROJECT_ID }} --yes --token ${{ secrets.FIREBASE_TOKEN }}

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: "release_app_store"
          subdirectory: ios
          options: '{ "version_number": "${{ github.ref_name }}" }'
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      FLUTTERFIRE_PLATFORM: android
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: "android"

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Create .env file
        run: |
          cat <<EOF > .env
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          FACEBOOK_URL=${{ secrets.FACEBOOK_URL }}
          FACEBOOK_PAGE_ID=${{ secrets.FACEBOOK_PAGE_ID }}
          FEEDBACK_EMAIL=${{ secrets.FEEDBACK_EMAIL }}
          EOF

      - name: Run Flutter tasks
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: "pubspec.yaml"
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Create google_service_account.json
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > google_service_account.json

      - name: Create key.jks
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/key.jks

      - name: Create key.properties
        run: |
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyAlias=release
          storeFile=../key.jks
          EOF
        env:
          ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}

      - name: Setup Firebase CLI
        uses: pocket-apps/action-setup-firebase@v2
        with:
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}

      - name: Install FlutterFire CLI
        run: dart pub global activate flutterfire_cli

      - name: Run flutterfire configure
        run: flutterfire configure --platforms android --project ${{ secrets.FIREBASE_PROJECT_ID }} --yes --token ${{ secrets.FIREBASE_TOKEN }}

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: "release_play_store"
          subdirectory: android
          options: '{ "version_number": "${{ github.ref_name }}" }'
        env:
          APP_PACKAGE_NAME: ${{ secrets.APP_PACKAGE_NAME }}
